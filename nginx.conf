
# 这里是创建代理命令
# yum install tinyproxy -y
# sed -i 's/8888/3389/g' /etc/tinyproxy/tinyproxy.conf
# sed -i 's/Allow 127.0.0.1/#Allow 0.0.0.0/g' /etc/tinyproxy/tinyproxy.conf
# chkconfig tinyproxy on
# service tinyproxy start
# iptables -I INPUT -p tcp --dport 3389 -j ACCEPT

# git config --global credential.helper store
# [http]
# 	proxy = 192.168.1.20:9999
# thinkphp配置 fastcgi.conf
# fastcgi_param PHP_ADMIN_VALUE "open_basedir=$document_root/:$document_root/../:/tmp/:/proc/";
# JAVA_TOOL_OPTIONS 变量值为：-Dfile.encoding=UTF-8 再次启动时jvm就会默认先改变初始化字符集
server {
        listen       80;
        server_name  kj.com gohosts.com;


        listen 443 ssl;
      ssl_certificate /work/ssl/5535520_rtmp.bytd.link.pem;
      ssl_certificate_key /work/ssl/5535520_rtmp.bytd.link.key;
      ssl_session_timeout 5m;
      ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

      ssl_prefer_server_ciphers on;
        index index.html index.htm index.php default.html default.htm default.php;


        root   "D:\work\frame\frame";
        location / {
            index  index.html index.htm index.php;
            #autoindex  on;
             #/**********************************nginx伪静态规则*****************************************************/
             #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
             if (!-e $request_filename)
         	{
            #地址作为将参数rewrite到index.php上。
            rewrite ^/(.*)$ /index.php;
            #若是子目录则使用下面这句，将subdir改成目录名称即可。
            #rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;
        	 }
        }
       
        location ~ \.php(.*)$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO  $fastcgi_path_info;
            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
            include        fastcgi_params;
        }
        #图片跨域
        #对应目录
      location /对应相对目录/* {
                           root  /对应绝对目录/;     
                           add_header Access-Control-Allow-Origin '*';
                           add_header Access-Control-Allow-Credentials 'true';
                           add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                           add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                           expires 30d;
                           }


        
}

# 8) wget -c http://pecl.php.net/get/event-2.3.0.tgz -P /usr/local/src	# 下载event压缩包
# 9) cd /usr/local/src			# 切换到下载压缩包的路径下
# 10) tar -zxvf event-2.3.0.tgz && cd event-2.3.0		# 解压event压缩包,并且进入软件根目录下
# 11) /usr/local/php/bin/phpize		# 若目录下没有 configure文件,则执行此操作生成configure
# 12) ./configure --with-php-config=/usr/local/php/bin/php-config --with-event-libevent-dir=/usr/local/libevent-2.1.8/		# 指定event拓展的安装路径,以及依赖包的安装路径
# 13) make && make install		# 编译安装
# 14) echo &? 					#可检验安装是否成功,返回0表示成功,否则失败
# 15) echo extension=event.so >> /usr/local/php/etc/php.ini	# 在php.ini文件中开启event拓展; 注意: >>为追加到文件末尾, 追加的文件路径是你的php.ini文件所在的路径名,可以通过 php --ini 获取
# 16) service php-fpm restart 		# 重启php服务;注意:修改完php.ini文件切记,重启php服务; php-fpm是php服务的执行文件;若CentOS系统是7.*命令不同,不再是service关键词
# 17) php -m | grep event 		# 查看event库插件是否安装成功
# 杀死所有相关进程
#  ps aux | grep clibase |  awk '{print $2}' | xargs kill -9